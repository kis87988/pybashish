# example of a curated Terminal input history to keep up as ~/.local/share/g.grep


#
# Bash at Mac or Linux
#

autopep8 --max-line-length 100 --in-place ...

awk '{print ...}'

cat /dev/null/child  # always fails

cat - | grep . | grep .  # free-text glass-terminal till ⌃C

cd -  # for toggling between two dirs

diff -x .git -burp ... ...

echo -n $'\e[8;'$(stty size | cut -d' ' -f1)';101t'  # 101 cols
echo >/dev/full  # always fails

export PS1='\$ '
export PS1="$PS1"'\n\$ '

find . -not \( -path './.git' -prune \)  # akin to:  git ls-files

last | head

ls *.csv | sed 's,[.]csv$,,' | xargs -I{} mv -i {}.csv {}.txt  # demo replace ext
ls --full-time ...  # to the second, at Linux
ls | LC_ALL=C sort | cat -n

pylint --rcfile=/dev/null --reports=n --disable=locally-disabled ...
pylint --list-msgs
pylint --help-msg E0012  # bad-option-value  # not yet adopted above

python2 p.py
python2 -m pdb p.py
python3 p.py
python3 -m pdb p.py

rename 's,[.]csv$,-csv.txt,' *.csv  # replace ext, at Perl Linux

sed -e $'3i\\\n...' | tee >(head -3) >(tail -2) >/dev/null  # first two, ellipsis, last two

ssh -G ...
ssh -vvv ...

ssh-add -l

stat ...

tar kxf ...  # FIXME: test CACHEDIR.TAG
tar zcf ... ...


#
# Bash of Mac Clipboard, indexed by Python of Str
#
# note: Mac did not promise mere US ASCII out from: cat -tv
#

pbpaste | hexdump -C | pbcopy  # hexdump
pbpaste | sed 's,^,    ,' | pbcopy  # indent
pbpaste | sed 's,^    ,,' | pbcopy  # dedent undent
pbpaste | tr '[A-Z]' '[a-z]' | pbcopy  # lower
pbpaste | sed 's,^  *,,' | pbcopy  # lstrip
pbpaste | cat <(tr '\n' ' ') <(echo) | pbcopy  # join
pbpaste | cat -n | sort -nr | cut -f2- | pbcopy  # reverse
pbpaste | sed 's,  *$,,' | pbcopy  # rstrip
pbpaste | sort | pbcopy  # sort
pbpaste | sed 's,  *, ,g' | tr ' ' '\n' | pbcopy  # split
pbpaste | sed 's,^\(.*\)\([.][^.]*\)$,\1 \2,' | pbcopy  # splitext
pbpaste | sed 's,^  *,,'  | sed 's,  *$,,' | pbcopy  # strip
pbpaste | tr '[a-z]' '[A-Z]' | pbcopy  # upper
pbpaste | sed 's,[^ -~],?,g' | pbcopy  # us-ascii errors replace with "\x3F" question mark
pbpaste | sed 's,[^ -~],,g' | pbcopy  # us-ascii errors ignore

pbpaste >p  # pb stash
cat p | pbcopy  # pb stash pop


#
# The C Programming Language
#
(cat >c.c <<EOF
main() {
    puts("Hello, World!");
}
EOF
) && gcc -Wno-implicit-int -Wno-implicit-function-declaration c.c && ./a.out
#


#
# The C++ Programming Language
#
(cat >c.cpp <<EOF
#include <iostream>
int main() {
        std::cout << "Hello, C++ World" << std::endl;
}
EOF
) && g++ -Wall -Wpedantic c.cpp && ./a.out
#


#
# Emacs
#

emacs -nw --no-splash  # free-text glass-terminal

emacs -nw ~/.emacs

#
# emacs  ⌃G  => cancel
# emacs  ⌃Q  => literal input
#
# emacs  ⌃A ⌃B ⌃E ⌃F ⌥M  => move column
# emacs  ⌥B ⌥F ⌥A ⌥E  => move small word, sentence
# emacs  ⌃P ⌃N ⌥G⌥G  => move row, goto line
# emacs  fixme => move balance
#
# emacs  ⌃D ⌥D ⌥Z  => delete char, word, to char
# emacs  ⌃K ⌃W ⌥W ⌃Y ⌥Y ⌥T  => cut, copy, paste, paste-next-instead, join, transpose
# emacs  ⌥H ⌥Q  => paragraph: mark, reflow
#
# emacs  ⌃U1234567890 ⌃- ⌃_ ⌃Xu ⌥L ⌥U ⌥C  => repeat, undo, undo, lower, upper, title
# emacs  ⌃S ⌃R ⌥% => find, replace
#
# emacs  ⌃@⌃@ ⌃@ ⌃X⌃X ⌃U⌃@  => mark: begin, place, bounce, goto
# emacs  ⌃X( ⌃X) ⌃Xe  => record replay
# emacs  fixme => vertical delete copy paste insert
# emacs  fixme => dent/dedent
# emacs  ⌥H⌃U1⌥|  => pipe
#
# emacs  ⌃V ⌥V ⌃L  => scroll rows
# emacs  ⌃X1 ⌃Xk ⌃Xo  => close others, close this, warp to next
#
# emacs  ⌃Xc ⌥~  => quit emacs, without saving
#
# emacs  ⌃Hk... ⌃Ha...  => help with key chord squence, help with word
#
# emacs  ⌃Z  => as per terminal or no-op
#
# emacs  ⌃] ⌃\  => obscure
# emacs  ⌃Ca-z => custom
#

#
# emacs ⌥X describe-bindings Return  => help with lots of key chord sequences
#

r"""

; ~/.emacs

;; Choose preferences

(setq-default fill-column 99)
(when (fboundp 'global-superword-mode) (global-superword-mode 't))  ; accelerate M-f M-b

;; Define new keys

(global-set-key (kbd "C-c %") 'query-replace-regexp)  ; for when C-M-% unavailable
(global-set-key (kbd "C-c -") 'undo)  ; for when C-- alias of C-_ unavailable
(global-set-key (kbd "C-c b") 'ibuffer)  ; for ? m Q I O multi-buffer replace
(global-set-key (kbd "C-c O") 'overwrite-mode)  ; aka toggle Insert
(global-set-key (kbd "C-c o") 'occur)
(global-set-key (kbd "C-c r") 'revert-buffer)
(global-set-key (kbd "C-c s") 'superword-mode)  ; toggle accelerate of M-f M-b
(global-set-key (kbd "C-c w") 'whitespace-cleanup)

;; Abbreviate M-h C-u 1 M-| = Mark-Paragraph Universal-Argument Shell-Command-On-Region

(global-set-key (kbd "C-c |") 'like-shell-command-on-region)
(defun like-shell-command-on-region ()
    (interactive)
    (unless (mark) (mark-paragraph))
    (setq string (read-from-minibuffer
        "Shell command on region: " nil nil nil (quote shell-command-history)))
    (shell-command-on-region (region-beginning) (region-end) string nil 'replace)
    )

"""


#
# Git
#

# git clean -ffxdq  # destroy everything not added, without backup
# git reset --hard @{upstream}  # shove all my comments into the "git reflog", take theirs instead

git branch | grep '^[*]'
git branch --all

git checkout -  # for toggling between two branches

git status  # gs gs
git status --ignored --short

git apply -v ...'.patch'
patch -p1 <...'.patch'  # silently drops new chmod ugo+x


#
# Mac v Linux
#

curl -O ...  # Mac a la Linux wget


#
# Screen
#

screen -h 7654321  # escape from $STY with more than 1074 lines of transcript
screen -h 7654321  # escape from $STY with more than 1074 lines of transcript
screen -X hardcopy -h ~/s.screen  # export transcript
screen -ls  # list sessions
screen -r  # attach back to any session suspended by ⌃A D detach
screen -r ...  # attach back to a choice of session suspended by ⌃A D detach
screen -r ...  # attach back to a choice of session suspended by ⌃A D detach


#
# TMux
#

tmux
tmux attach  # attach.session til 'no sessions'
tmux capture-pane -S -9999  # 1 of 3
tmux save-buffer ~/t.tmux   # 2 of 3
chmod ugo+r ~/t.tmux        # 3 of 3

#
# TMux ⌃B ?  => list all key bindings till ⌃X⌃C
# TMux ⌃B [ Esc  => page up etc. a la Emacs
# TMux ⌃B C  => new-window
# TMux ⌃B D  => detach-client
#


#
# Ubuntu
#

head /etc/apt/sources.list  # lsb_release
cat /etc/lsb-release  # lsb_release
lsb_release -a  # lsb_release

# sudo true
# date; time sudo -n apt-get -y update
# date; time sudo -n apt-get -y upgrade
# date; time sudo -n apt-get -y dist-upgrade



#
# Unicode-Org
#

fmt.py --ruler  # Terminal column ruler

#
# printable us-ascii chars
# !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
#

#
# ⌃ ⌥ ⇧ ⌘ ← → ↓ ↑  # Apple key order:  Control/Ctrl Option/Alt Shift Command Left/Right/Down/Up
#



#
# Vim
#

vim  # free-text glass-terminal

vim '+$' ~/.vimrc  # + option to say what line to start on

#
# vim  Esc  => cancel
# vim  ⌃V  => literal input
#
# vim  0 ^ fx h l tx Fx Tx | ; , _  => move column
# vim  b e w B E W ( ) { }  => move small word, large word, sentence, paragraph
# vim  j k G 1G !G H L M $ - + ⌃J ⌃N ⌃P  => move row
# vim  %  => move balance
#
# vim  dx x D X p yx P Y J  => cut, copy, paste, join
# vim  a cx i o s Esc A C O S  => enter/ exit insert mode
# vim  R Esc  => enter/ exit overlay mode
#
# vim  123456789 u UU ~ . ⌃G ⌃R => repeat, undo, revisit, toggle-case, redo
# vim  n N / ? => find
# vim  %s/pattern/repl/g  => find and replace
#
# vim  mm 'm '' `m ``  => mark, goto, bounce, via either tick
# vim  qqq @q  => record, replay
# vim  ⌃V I X Y P  => vertical: insert, delete, copy, paste
# vim  <x >x  => dedent/indent
# vim  !x  => pipe
#
# vim  zb zt zz ⌃B ⌃D ⌃E ⌃F ⌃U ⌃Y  => scroll rows
# vim  ⌃Wo ⌃WW ⌃Ww ⌃]  => close others, previous, next, goto link
# vim  ⌃^  => warp to previous buffer
#
# vim  : ZZ ZQ  => ex command such as :q, save-then-quit-vim, quit-vim-without-saving
#
# vim  ⌃C ⌃Q ⌃S ⌃Z ⌃[  => as per terminal or no-op
#
# vim  Q # & * = [ ] "  => obscure
# vim  ⌃A ⌃H ⌃I ⌃O ⌃T ⌃X ⌃\ ⌃_  => obscure
# vim  ⌃@ g v V \ ⌃?  => not classic
#

# vim  :help ⌃V...  # help with key chord sequence

#
# vim  " to show space v tab
# vim  :syntax on
# vim  :set syntax=whitespace
#

r"""

" ~/.vimrc

:set softtabstop=4 shiftwidth=4 expandtab
autocmd FileType c,cpp   set softtabstop=8 shiftwidth=8 expandtab
autocmd FileType python  set softtabstop=4 shiftwidth=4 expandtab

:syntax on

:set ignorecase
:set nowrap
" :set number

:set hlsearch
:nnoremap <esc><esc> :noh<return>
" hlsearch, noh = toggle on/off highlighting of all hits of search
" n-no-remap = remap in the normal (not-insert) mode except don't recurse thru other remaps

:highlight RedLight ctermbg=red
:call matchadd('RedLight', '\s\+$')

:nnoremap <Bslash>w :call RStripEachLine()<return>
function! RStripEachLine()
    let with_line = line(".")
    let with_col = col(".")
    %s/\s\+$//e
    call cursor(with_line, with_col)
endfun
" RStripEachLine = delete the trailing whitespace from each line (not yet from file)

"""


#
# Last Paragraph
#

bash --version
python --version
zsh --version
uname -a

# copied from:  git clone https://github.com/pelavarre/pybashish.git
